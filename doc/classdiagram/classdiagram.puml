@startuml
!pragma layout smetana

class Main {
+ static void main(String[] args)
}


class TextileService{
- String name
- String textilesDataPath
- String userDataPath
- HashMap<String, String> userData
- User currentUser
- TextUI ui
- FileIO io
- TextileManager manager
+ TextileService(String name)
- void startTextileService()
- void createUser()
- void addUser(User u)
- void loadUserData()
- void loadSavedList()
- void homeMenu()
}

class TextileManager{
- TextUI
- FileIO
- ArrayList<Textiles> textiles
- User currentUser
- TextileService textileService
}

class FabricFinder{
 - List<Textile> textileCatalog

    + FabricFinder(String csvFilePath)
    + void runFabricFinder()
    + void processImage(String filePath)
    - int[] getDominantColorFromVisionAPI(String filePath)
    - String identifyColor(int[] rgb)
    - List<Textile> getMatchingTextiles(int[] uploadedRGB)
    - boolean isColorSimilar(int[] rgb1, int[] rgb2)
    + static List<Textile> loadTextilesFromCSV(String fileName)
}

class Login {
    - static final String filePath
    - static ArrayList<User> users
    - static User currentUser

    + Login()
    + static User userLoginOrRegister()
    + static void userLogin()
    + static void userCreate()
    + static boolean userExists(String username)
    - static boolean login(String username, String password)
    + static void loadUsersFromCSV()
    + User getCurrentUser()
}

class User {
    - static String username
    - static String password
    - ArrayList<Textile> savedList
    - ArrayList<Textile> getOrder
    - int UserID
    - static int userIDCounter
    - static ArrayList<User> users
    - static User currentUser

    + User(String username, String password)
    + static String getUsername()
    + static void setUsername(String newusername)
    + static String getPassword()
    + ArrayList<Textile> getSaved()
    + String toString()
    + static String password()
    + static boolean checkUpperCase(String password)
    + static void userSavedList()
}

class Textile {
    - String textileName
    - String path
    - int[] rgb
    - String textileColor
    - String textileFabric
    - String textileComposition

    + Textile(String textileName, String path, int[] rgb)
    + Textile(String textileName, String textileColor, String textileFabric, String textileComposition)

    + String getTextileName()
    + String getPath()
    + int[] getRgb()
    + String getTextileFabric()
    + String getTextileColor()
    + String getTextileComposition()
}

class Menu {
    - ArrayList<Textile> textiles
    - static User currentUser
    - TextUI ui
    - FileIO io
    - String textilesDataPath
    - TextileManager manager
    - Textile currentTextile
    - FabricFinder fabricFinder
    - boolean turnOff

    + Menu(ArrayList<Textile> textiles)
    + void homeMenu()
    + void textileCollection()
    + void selectTextile()
    + void displayTextileInformation()
    + static int profileMenuOptions()
    + void profileMenu(User currentUser)
    + void settingsMenu(User currentUser)
    + boolean isTurnOff()
}

package "util" {

class TextUI {
- Scanner scan
+ void displayMsg(String msg)
+ int displayHomeMenu(String msg)
+ int promptNumeric(String msg)
+ String promptText(String msg)
}

class FileIO {
+ HashMap<String, String> readUserData(String path)
+ ArrayList<Movie> readTextileData(String path)
+ void SaveUserData(String userAsText, String path)
+ void saveTextileList(String username, ArrayList<Textile> savedList, String listType)
+ ArrayList<Textile> loadTextileList(String username, String listType)
}
}

Main *-- TextileService
TextileService *-- FileIO
TextileService *-- TextUI
TextileService *-- User
TextileService *-- TextileManager
TextileManager *-- Textile
TextileManager *-- FabricFinder
TextileService *-- Textile
User *-- Textile
Menu *-- Textile
Menu *-- TextileManager
Menu *-- FabricFinder
Menu *-- TextUI
Menu *-- FileIO
Menu *-- User
Login *-- User : maintains
Login *-- TextUI : interacts
Login *-- FileIO : interacts
@enduml